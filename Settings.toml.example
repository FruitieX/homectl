###############################################################################
#
# Start by configuring integrations to your home automation systems.
#
# To keep things simple and easy for anybody to try out, this sample file uses
# the dummy integration to build the configuration for an imaginary house with
# some imaginary dummy devices.
#
# Find out how to configure integrations for supported home automation systems
# at:
# https://github.com/FruitieX/homectl#sample-configs-for-supported-integrations
#
###############################################################################

# Set up a dummy home automation system, which can manage most of our imaginary
# lights. Note that normally integrations are able to auto-discover lights.
# That's not possible for our dummy integration, so we need to list them here.
[integrations.dummy_ha1]
plugin = "dummy"

  [integrations.dummy_ha1.devices]
  1 = { name = "Kitchen ceiling light", init_state = { hue = 0, saturation = 0, value = 1 } }
  2 = { name = "Living room", init_state = { hue = 25, saturation = 0.35, value = 1 } }
  3 = { name = "Entryway", init_state = { hue = 25, saturation = 0.35, value = 1 } }
  4 = { name = "Office", init_state = { hue = 0, saturation = 0, value = 0 } }
  5 = { name = "Bedroom", init_state = { hue = 0, saturation = 0, value = 0 } }
  6 = { name = "Outdoor spot", init_state = { hue = 100, saturation = 0.75, value = 1 } }
  7 = { name = "Staircase", init_state = { hue = 0, saturation = 0, value = 0 } }

# Set up another dummy home automation system, which our imaginary LED strips
# are controlled by.
[integrations.dummy_ha2]
plugin = "dummy"

  [integrations.dummy_ha2.devices]
  1 = { name = "Kitchen cabinet LED", init_state = { hue = 0, saturation = 0, value = 1 } }
  2 = { name = "Bathroom LED", init_state = { hue = 25, saturation = 0.35, value = 1 } }

# This integration creates a fake device that transitions its color between
# presets for day and night.
[integrations.circadian]
plugin = "circadian"
device_name = "Circadian rhythm"
day_color = { hue = 25, saturation = 0.35, value = 1 }
day_fade_start = "06:00"
day_fade_duration_hours = 4
night_color = { hue = 17, saturation = 1.0, value = 0.5 }
night_fade_start = "18:00"
night_fade_duration_hours = 1

###############################################################################
#
# The next step is to configure any groups, scenes and routines according to
# your needs.
#
# Continuing with our example, we will:
#
# - Group lights by room or whether they are upstairs / downstairs. For
#   convenience, we will also create a group containing all lights.
# - Create commonly used scenes such as "default", "night light",
#   "all off", "party mode".
#
# We wont configure any routines since these won't work out of the box without
# a few sensors (light switches, motion detectors, etc.) configured.
#
# Note that even without routines, you can still activate scenes and change
# device states via the homectl UI.
#
# Find more information and tips on the remaining configuration sections at:
# https://github.com/FruitieX/homectl#configuration-tips--recipes
#
###############################################################################

##########
# Groups #
##########

# Group together all kitchen lights from different HA systems
[groups.kitchen]
name = "Kitchen"
devices = [
  { integration_id = "dummy_ha1", name = "Kitchen ceiling light"},
  { integration_id = "dummy_ha2", name = "Kitchen cabinet LED"},
]

# Group together all downstairs lights, including lights from
# the above kitchen group
[groups.downstairs]
name = "Downstairs"
devices = [
  { integration_id = "dummy_ha1", name = "Living room" },
  { integration_id = "dummy_ha1", name = "Entryway" },
]
groups = [ { group_id = "kitchen"} ]

# Group together all upstairs lights
[groups.upstairs]
name = "Upstairs"
devices = [
  { integration_id = "dummy_ha1", name = "Office"},
  { integration_id = "dummy_ha1", name = "Bedroom"},
  { integration_id = "dummy_ha1", name = "Staircase"},
  { integration_id = "dummy_ha2", name = "Bathroom LED"},
]

# Group together all lights in (and outside) the house
[groups.all]
name = "All lights"
devices = [
  { integration_id = "dummy_ha1", name = "Outdoor spot" }
]
groups = [
  { group_id = "downstairs" },
  { group_id = "upstairs" }
]

##########
# Scenes #
##########

# First, define a scene with lots of individual colors per light.
#
# Note that we are not including all devices, and the result is that only some
# devices will be affected by the scene.
[scenes.party]
name = "Party"

  # Individual light states are configured per integration with each light's name
  [scenes.party.devices.dummy_ha1]
  "Living room" = { power = true, color = { hue = 130, saturation = 1.0, value = 1.0 }}
  "Entryway" = { power = true, color = { hue = 30, saturation = 1.0, value = 1.0 }}
  "Kitchen ceiling light" = { power = true, color = { hue = 240, saturation = 1.0, value = 1.0 }}

  [scenes.party.devices.dummy_ha2]
  "Kitchen cabinet LED" = { power = true, color = { hue = 300, saturation = 1.0, value = 1.0 }}

# Turn all lights off, useful when leaving house
[scenes.off]
name = "All off"

  # We can set state on entire groups
  [scenes.off.groups]
  all = { power = false }

  # homectl processes devices after groups so we can override state of
  # individual lights.
  #
  # Slowly fade out entryway light so we can still see
  [scenes.off.devices.dummy_ha1]
  "Entryway" = { power = false, transition_ms = 180000 }

# Default scene for upstairs lights
[scenes.default_upstairs]
name = "Default (upstairs)"
  
  # We can also "link" devices or entire groups to the state of another device.
  # In this example we copy state from a virtual `circadian/color` device into
  # every device in the upstairs group.
  [scenes.default_upstairs.groups]
  upstairs = { integration_id = "circadian", device_id = "color" }

# Default scene for downstairs lights
[scenes.default_downstairs]
name = "Default (downstairs)"

  # Do the same linking trick for downstairs devices
  [scenes.default_downstairs.groups]
  downstairs = { integration_id = "circadian", device_id = "color" }

  # And set the outdoor spot to a certain color
  [scenes.default_downstairs.devices.dummy_ha1]
  "Outdoor spot" = { power = true, color = { hue = 100, saturation = 0.75, value = 1 } }

# Night light scene
[scenes.night_light]
name = "Night light"

  # Turn off all lights
  [scenes.night_light.groups]
  all = { power = false }

  # Leave these lights on with very low brightness
  [scenes.night_light.devices.dummy_ha1]
  "Staircase" = { power = true, color = { hue = 14, saturation = 1, value = 0.15 } }

  [scenes.night_light.devices.dummy_ha2]
  "Bathroom LED" = { power = true, color = { hue = 14, saturation = 1, value = 0.15 } }
